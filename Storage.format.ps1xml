<?xml version="1.0" encoding="utf-8"?>
<Configuration>
  <ViewDefinitions>
    <!--Profile.SanVolume FT-->
    <View>
      <Name>sanvolumes</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Profile.SanVolume</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Volume ID</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Volume Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>LUN</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Pool</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Size</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Provisioning</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Sharing</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>id</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0}" -f $profileCache[$_.volumeUri].name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>lunType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0}" -f $profileCache[$_.volumeStoragePoolUri].name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0} GB" -f ($profileCache[$_.volumeUri].provisionedCapacity / 1gb)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0}" -f $profileCache[$_.volumeUri].provisionType</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>if ($profileCache[$_.volumeUri].shareable) { "{0}" -f "Shared" } else { "{0}" -f "Private" }</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.Volume FT-->
    <View>
      <Name>StorageVolume</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.Volume</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Provisioning</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Provisioned</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Sharing</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Storage System</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Storage Pool</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Used By</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>provisionType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>'{0:N2} GB' -f ($_.provisionedCapacity / 1GB)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  if ($_.shareable) { "Shared"}
                  else              { "Private" }
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>(send-hpovrequest $_.storageSystemUri).name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>(send-hpovrequest $_.storagePoolUri).name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  $associationProfileToVol = (send-hpovrequest ("/rest/index/associations?childUri=$($_.uri)&amp;name=server_profiles_to_storage_volumes") -Hostname $_.ApplianceConnection.Name).members
                  if ($associationProfileToVol) {
                  $profileNames = $associationProfileToVol | % { (Send-HPOVRequest $_.parentUri -Hostname $_.ApplianceConnection.Name).name }
                  [Array]::Sort([array]$profileNames)
                  $profileNames
                  }

                  else { "No server profiles" }
                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.Volume FL-->
    <View>
      <Name>StorageVolume</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.Volume</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <ScriptBlock>"{0} ({1})" -f $_.state, $_.stateReason</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Description</Label>
                <PropertyName>description</PropertyName>
              </ListItem>
              <ListItem>
                <Label>WWN</Label>
                <PropertyName>wwn</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Provisioning</Label>
                <PropertyName>provisionType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Provisioned capacity</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.provisionedCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Allocated capacity</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.allocatedCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Sharing</Label>
                <ScriptBlock>
                  if ($_.shareable) { "Shared"}
                  else              { "Private" }
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Stroage System</Label>
                <ScriptBlock>
                  (send-hpovrequest $_.storageSystemUri).name
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Stroage Pool</Label>
                <ScriptBlock>
                  (send-hpovrequest $_.storagePoolUri).name
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RAID</Label>
                <PropertyName>raidLevel</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Storage System Volume Name</Label>
                <PropertyName>deviceVolumeName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Used By</Label>
                <ScriptBlock>
                  $associationProfileToVol = (send-hpovrequest ("/rest/index/associations?childUri=$($_.uri)&amp;name=server_profiles_to_storage_volumes") -Hostname $_.ApplianceConnection.Name).members
                  if ($associationProfileToVol) {
                  $profileNames = $associationProfileToVol | % { (Send-HPOVRequest $_.parentUri -Hostname $_.ApplianceConnection.Name).name }
                  [Array]::Sort([array]$profileNames)
                  $profileNames
                  }

                  else { "No server profiles" }
                </ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.System.Pool FT-->
    <View>
      <Name>StorageSystemPool</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.System.Pool</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Storage System</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Domain</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Drive Type</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>RAID</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Total</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Allocated</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Free</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>(send-hpovrequest $_.storageSystemUri -Hostname $_.ApplianceConnection.Name).name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>domain</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>deviceType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>supportedRAIDLevel</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  <ScriptBlock>'{0:N2} GB' -f ($_.totalCapacity / 1GB)</ScriptBlock>
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  <ScriptBlock>'{0:N2} GB' -f ($_.allocatedCapacity / 1GB)</ScriptBlock>
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  <ScriptBlock>'{0:N2} GB' -f ($_.freeCapacity / 1GB)</ScriptBlock>
                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.System.Pool FL-->
    <View>
      <Name>StorageSystemPool</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.System.Pool</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>Status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Storage System</Label>
                <ScriptBlock>(send-hpovrequest $_.storageSystemUri -Hostname $_.ApplianceConnection.Name).name</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Domain</Label>
                <PropertyName>domain</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Drive Type</Label>
                <PropertyName>deviceType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>RAID</Label>
                <PropertyName>supportedRAIDLevel</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Total</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.totalCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Allocated</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.allocatedCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Free</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.freeCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Volumes</Label>
                <ScriptBlock>(Send-HPOVRequest "/rest/index/resources?category=storage-volumes&amp;query=storage_volume_storagepool_uri:'$($_.uri)'" -Hostname $_.ApplianceConnection.Name).count</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Volume Templates</Label>
                <ScriptBlock>(Send-HPOVRequest "/rest/index/resources?sort=name:asc&amp;category=storage-volume-templates&amp;query=storagePoolUri:'$($_.uri)'" -Hostname $_.ApplianceConnection.Name).count</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.SanManager FT-->
    <View>
      <Name>SanManager</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.SanManager</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Type</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Version</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Managed SANs</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>providerDisplayName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>deviceManagerVersion</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  $managedSans = New-Object System.Collections.ArrayList
                  if ($_.managedSansUri)
                  {

                    $resp = Send-HPOVRequest $_.managedSansUri -Hostname $_.ApplianceConnection.Name
                    foreach ($member in $resp.members) { [void]$managedSans.Add($member.name) }

                    $managedSans
                    
                  }

                  else { "None" }
                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.SanManager FL-->
    <View>
      <Name>SanManager</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.SanManager</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Type</Label>
                <PropertyName>providerDisplayName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Version</Label>
                <PropertyName>deviceManagerVersion</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Managed SANs</Label>
                <ScriptBlock>
                  $managedSans = New-Object System.Collections.ArrayList
                  if ($_.managedSansUri)
                  {

                  $resp = Send-HPOVRequest $_.managedSansUri -Hostname $_.ApplianceConnection.Name
                  foreach ($member in $resp.members) { [void]$managedSans.Add($member.name) }

                  $managedSans

                  }

                  else { "None" }
                </ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View> 
    <!--Storage.ManagedSan FT-->
    <View>
      <Name>ManagedSan</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.ManagedSan</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Principle Switch</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Network</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Zoned</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Automate Zoning</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Zoning Policy</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Use Aliases</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>principalSwitch</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>($_.publicAttributes | ? name -eq "NetworkName" ).value</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>zoningState</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  if ($_.sanPolicy.zoningPolicy -eq "NoZoning") { "No" }
                  else { "Yes" }
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>

                  switch ($_.sanPolicy.zoningPolicy) {

                  "SingleInitiatorAllTargets" { "Single initiator / all targets" }
                  "SingleInitiatorSingleStorageSystem" { "Single initiator / single storage system" }
                  default { $_.sanPolicy.zoningPolicy }

                  }

                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.sanPolicy.enableAliasing</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.ManagedSan FL-->
    <View>
      <Name>ManagedSan</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.ManagedSan</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Principal Switch</Label>
                <PropertyName>principalSwitch</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Network</Label>
                <ScriptBlock>($_.publicAttributes | Where { $_.name -eq "NetworkName" }).value</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Zoned</Label>
                <PropertyName>zoningState</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Automate Zoning</Label>
                <ScriptBlock>
                  if ($_.sanPolicy.zoningPolicy -eq "NoZoning") { "No" }
                  else { "Yes" }
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Zoning Policy</Label>
                <ScriptBlock>

                  switch ($_.sanPolicy.zoningPolicy) {

                  "SingleInitiatorAllTargets" { "Single initiator / all targets" }
                  "SingleInitiatorSingleStorageSystem" { "Single initiator / single storage system" }
                  default { $_.sanPolicy.zoningPolicy }

                  }

                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Use Aliases</Label>
                <ScriptBlock>$_.sanPolicy.enableAliasing</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.System FT-->
    <View>
      <Name>StorageSystem</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.System</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Serial Number</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Model</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>WWN</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Firmware</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
         </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>serialNumber</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>model</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>wwn</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>firmware</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.System FL-->
    <View>
      <Name>StorageSystem</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.System</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>serialNumber</Label>
                <PropertyName>serialNumber</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Model</Label>
                <PropertyName>model</PropertyName>
              </ListItem>
              <ListItem>
                <Label>WWN</Label>
                <PropertyName>wwn</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Firmware</Label>
                <PropertyName>firmware</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Total Capacity</Label>
                <ScriptBlock>'{0:N2} TB' -f ($_.totalCapacity / 1TB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Allocated Capacity</Label>
                <ScriptBlock>'{0:N2} TB' -f ($_.allocatedCapacity / 1TB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Free Capacity</Label>
                <ScriptBlock>'{0:N2} TB' -f ($_.freeCapacity / 1TB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Use Aliases</Label>
                <ScriptBlock>$_.sanPolicy.enableAliasing</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.System.Port FT-->
    <View>
      <Name>StorageSystemPort</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.System.Port</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>WWPN</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Expected Network</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Actual Network</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Port Group</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>portName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>portWwn</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  if ($_.expectedNetworkUri -and -not ($_.expectedNetworkUri -eq "unknown") ) 
                  {
                    $net = send-hpovrequest $_.expectedNetworkUri -Hostname $_.ApplianceConnection.Name
                    if ($net.fabricType -eq "FabricAttach") {"$($net.name) [FA]"}
                    else {" $($net.name) [DA]"}
                  }
                  else { $_.expectedNetworkUri }
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  if ($_.actualNetworkUri -and -not ($_.actualNetworkUri -eq "unknown") ) {
                  $net = send-hpovrequest $_.actualNetworkUri -Hostname $_.ApplianceConnection.Name
                  if ($net.fabricType -eq "FabricAttach") {"$($net.name) [FA]"}
                  else {" $($net.name) [DA]"}
                  }
                  else { $_.actualNetworkUri }
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>groupName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.System.Port FL-->
    <View>
      <Name>StorageSystemPort</Name>
      <ViewSelectedBy>
        <TypeName>HPOneView.Storage.System.Port</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>portName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>WWPN</Label>
                <PropertyName>portWwn</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Expected Network</Label>
                <ScriptBlock>
                  if ($_.expectedNetworkUri -and -not ($_.expectedNetworkUri -eq "unknown") ) {
                  $net = send-hpovrequest $_.expectedNetworkUri -Hostname $_.ApplianceConnection.Name
                  if ($net.fabricType -eq "FabricAttach") {"$($net.name) [FA]"}
                  else {" $($net.name) [DA]"}
                  }
                  else { $_.expectedNetworkUri }
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Actual Network</Label>
                <ScriptBlock>
                  if ($_.actualNetworkUri -and -not ($_.actualNetworkUri -eq "unknown") ) {
                  $net = send-hpovrequest $_.actualNetworkUri -Hostname $_.ApplianceConnection.Name
                  if ($net.fabricType -eq "FabricAttach") {"$($net.name) [FA]"}
                  else {" $($net.name) [DA]"}
                  }
                  else { $_.actualNetworkUri }
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Port Group</Label>
                <PropertyName>groupName</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
  </ViewDefinitions>
</Configuration>